version: '3.8'

services:
  app:
    build:
      context: ${BASE_IMAGES_PATH}/python-base
      dockerfile: Dockerfile
      args:
        PYTHON_VERSION: ${PYTHON_VERSION:-3.10}
    volumes:
      - .:/app
    ports:
      - "${APP_PORT:-8000}:8000"
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: .
          target: /app
        - action: rebuild
          path: requirements.txt

  db:
    build:
      context: ${BASE_IMAGES_PATH}/postgres
      dockerfile: Dockerfile
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: .env
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  caddy:
    build:
      context: ${BASE_IMAGES_PATH}/caddy
      dockerfile: Dockerfile
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
